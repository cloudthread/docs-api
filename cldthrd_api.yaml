openapi: 3.0.3
info:
  version: 0.0.1
  title: Cloudthread API

servers:
  - url: 'https://api.cloudthread.io'

paths:
  /streams/ingest:
    post:
      operationId: ingest_stream_data
      requestBody:
        $ref: '#/components/requestBodies/StreamData'
      security:
        - ApiKeyAuth: []
      responses:
        201:
          description: created
        400:
          description: validation error
        404:
          description: no stream found

  /events:
    post:
      operationId: create_events
      requestBody:
        $ref: '#/components/requestBodies/CreateEvents'
      security:
        - ApiKeyAuth: [ ]
      responses:
        201:
          description: created
        400:
          description: validation error
        404:
          description: no team found

  /tag-catalog:
    get:
      operationId: get_tag_catalog
      parameters:
       - $ref: '#/components/parameters/CatalogKey'
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: tag data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagsPayload'

  /cost-optimization/opportunities/list:
    post:
      operationId: get_opportunities
      requestBody:
        $ref: '#/components/requestBodies/GetOpportunitiesQuery'
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: opportunities list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOpportunitiesResponse'
  
  /cost/metric/{metric_id}:
    get:
      operationId: get_cost_metric_filter_data
      parameters:
       - $ref: '#/components/parameters/MetricID'
       - $ref: '#/components/parameters/StartDate'
       - $ref: '#/components/parameters/EndDate'
       - $ref: '#/components/parameters/CostType'
       - $ref: '#/components/parameters/Amortization'
       - $ref: '#/components/parameters/Exclude'
       - $ref: '#/components/parameters/Granularity'
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: metric data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCostViewPayload'

  /unit/metric/{metric_id}:
    get:
      operationId: get_unit_metric_filter_data
      parameters:
       - $ref: '#/components/parameters/MetricID'
       - $ref: '#/components/parameters/StartDate'
       - $ref: '#/components/parameters/EndDate'
       - $ref: '#/components/parameters/CostType'
       - $ref: '#/components/parameters/Amortization'
       - $ref: '#/components/parameters/Exclude'
       - $ref: '#/components/parameters/Granularity'
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: metric data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUnitMetricPayload'

  /users:
    get:
      operationId: get_users
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
  /teams:
    get:
      operationId: get_teams_within_org
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: get teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTeamsResponse'

    post:
      operationId: create_team
      requestBody:
        $ref: '#/components/requestBodies/CreateTeam'
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: create team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        400:
          description: validation error
        404:
          description: slack integration or slack channel not found

  /teams/{team_id}:
    get:
      operationId: get_team_within_org
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: get team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
    patch:
      operationId: update_team
      requestBody:
        $ref: '#/components/requestBodies/CreateTeam'
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        400:
          description: validation error
        404:
          description: slack integration/slack channel not found/team not found

    delete:
      operationId: delete_team
      security:
        - ApiKeyAuth: [ ]
      responses:
        204:
          description: deleted
        404:
          description: team not found

  /teams/{team_id}/members:
    get:
      operationId: get_team_members
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: list of team members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'

  /teams/{team_id}/members/assign:
    post:
      operationId: assign_users_to_team
      requestBody:
        $ref: '#/components/requestBodies/AssignUsersToTeam'
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: list of team members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'

  /teams/{team_id}/members/delete:
    post:
      operationId: assign_users_to_team
      requestBody:
        $ref: '#/components/requestBodies/RemoveUsersFromTeam'
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: list of team members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  parameters:
    CatalogKey:
      name: catalog_key
      in: query
      description: Tag Catalog key
      required: true
      schema:
        type: string

    MetricID:
      name: metric_id
      in: path
      description: Cost View or Unit Metric ID
      required: true
      schema:
        type: string

    TeamID:
      name: team_id
      in: path
      description: team id
      required: true
      schema:
        type: string

    StartDate:
      name: start_date
      in: query
      description: Start Date
      required: true
      schema:
        type: string

    EndDate:
      name: end_date
      in: query
      description: End Date
      required: true
      schema:
        type: string

    CostType:
      name: cost_type
      in: query
      description: Cost Type or Cost Column ID
      required: false
      schema:
        type: string or integer

    Amortization:
      name: amortization
      in: query
      description: Cost Data Amortization
      required: false
      schema:
        type: boolean

    Exclude:
      name: exclude
      in: query
      description: Excluded Payment Types
      required: false
      schema:
        type: comma-seperated string

    Granularity:
      name: granularity
      in: query
      description: Metric Date Granularity
      required: false
      schema:
        type: string

  requestBodies:
    StreamData:
      description: stream data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StreamData'

    CreateEvents:
      description: create events
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateEvents'

    GetOpportunitiesQuery:
      description: get opportunities payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetOpportunitiesQuery'

    CreateTeam:
      description: create team
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTeamRequest'

    AssignUsersToTeam:
      description: assign users to team
      content:
        application/json:
          schema:
            properties:
              users_ids:
                type: array
                items:
                  type: string

    RemoveUsersFromTeam:
      description: remove users from team
      content:
        application/json:
          schema:
            properties:
              users_ids:
                type: array
                items:
                  type: string

  schemas:
    StreamData:
      description: stream data
      properties:
        data_stream_token:
          type: string
          example: sometoken
        metric_agg_func:
          type: string
          example: Sum | Average | Minimum | Maximum
        data:
          type: array
          items:
            $ref: '#/components/schemas/StreamDataPayload'

    StreamDataPayload:
      properties:
        timestamp:
          type: string
          format: date-time
          example: 1234567890
          description: can be either timestamp or datetime string
        metric_name:
          type: string
        metric_value:
          type: number
          format: float
          example: 3.14
        custom_dimensions:
          type: object

    GetOpportunitiesQuery:
      properties:
        opportunity_type_id:
          type: string
        status:
          type: string
        code_automation:
          type: boolean
        thread_id:
          type: integer
        account:
          type: string
        region:
          type: string
        service:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tags'
        category:
          type: string
        record_id:
          type: string
        source:
          type: string
        github_pr_key:
          type: string
        secondary_id:
          type: integer
        last_detected_start_date:
          type: string
          format: date
        last_detected_end_date:
          type: string
          format: date
        status_updated_start_date:
          type: string
          format: date
        status_updated_end_date:
          type: string
          format: date
        details:
          type: boolean
        priority:
          type: integer

    Tags:
      properties:
        Key:
          type: string
        Value:
          type: string

    GetOpportunities:
      properties:
        id:
          type: integer
        source:
          type: string
        opportunity_details:
          type: object
        opportunity_type_id:
          type: string
        cost_impact:
          type: number
        record_id:
          type: string
        status_updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        status:
          type: string
        last_detected_at:
          type: string
          format: date-time
        thread_id:
          type: integer
        github_pr_key:
          type: string

    GetOpportunitiesResponse:
      type: array
      items:
        $ref: '#/components/schemas/GetOpportunities'

    CreateEvents:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CreateEventsData'

    CreateEventsData:
      properties:
        timestamp:
          type: string
          format: date-time
          example: 1234567890
          description: can be either timestamp or datetime string
        payload:
          $ref: '#/components/schemas/EventsPayload'
        team_id:
          type: integer
          example: 1

    EventsPayload:
      properties:
        type:
          type: string
        description:
          type: string
        event_url:
          type: string

    GetTagsPayload:
      properties:
        tags:
          type: object
          additionalProperties:
            type: string

    GetCostViewPayload:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetCostViewDataPoint'

    GetCostViewDataPoint:
      properties:
        current_timeframe_cost:
          type: number
          format: float
        previous_timeframe_cost:
          type: number
          format: float
        pop_diff:
          type: number
          format: float
        pop_change:
          type: number
          format: float
        date:
          type: string

    GetUnitMetricPayload:
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetUnitMetricDataPoint'

    GetUnitMetricDataPoint:
      properties:
        current_timeframe_denominator:
          type: number
          format: float
        current_timeframe_numerator:
          type: number
          format: float
        current_timeframe_unit_metric:
          type: number
          format: float
        previous_timeframe_denominator:
          type: number
          format: float
        previous_timeframe_numerator:
          type: number
          format: float
        previous_timeframe_unit_metric:
          type: number
          format: float
        pop_diff:
          type: number
          format: float
        pop_change:
          type: number
          format: float
        d_agg_func:
          type: string
        n_agg_func:
          type: string
        date:
          type: string

    User:
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string

    GetUsersResponse:
        type: array
        items:
          $ref: '#/components/schemas/User'

    CreateTeamRequest:
      properties:
        id:
          type: string
        name:
          type: string
        slack_channel:
          type: string
        aws_account_ids:
          type: array
          items:
            type: string
        aws_bill_payer_account_ids:
          type: array
          items:
            type: string
        aws_region_names:
          type: array
          items:
            type: string
        aws_services:
          type: array
          items:
            type: string
        aws_tags:
          type: array
          items:
            type: object
        aws_account_tags:
          type: array
          items:
            type: object
        gcp_project_names:
          type: array
          items:
            type: string
        gcp_billing_account_ids:
          type: array
          items:
            type: string
        gcp_sku_ids:
          type: array
          items:
            type: string
        gcp_locations:
          type: array
          items:
            type: string
        gcp_services:
          type: array
          items:
            type: string
        gcp_labels:
          type: array
          items:
            type: object
        custom_stream_tokens:
          type: array
          items:
            type: string
        custom_metric_names:
          type: array
          items:
            type: string
        custom_dimensions:
          type: array
          items:
            type: object
        opportunity_priorities:
          type: array
          items:
            type: integer

    TeamResponse:
      properties:
        id:
          type: string
        name:
          type: string
        slack_channel:
          type: string
        aws_account_ids:
          type: array
          items:
            type: string
        aws_bill_payer_account_ids:
          type: array
          items:
            type: string
        aws_region_names:
          type: array
          items:
            type: string
        aws_services:
          type: array
          items:
            type: string
        aws_tags:
          type: array
          items:
            type: object
        aws_account_tags:
          type: array
          items:
            type: object
        gcp_project_names:
          type: array
          items:
            type: string
        gcp_billing_account_ids:
          type: array
          items:
            type: string
        gcp_sku_ids:
          type: array
          items:
            type: string
        gcp_locations:
          type: array
          items:
            type: string
        gcp_services:
          type: array
          items:
            type: string
        gcp_labels:
          type: array
          items:
            type: object
        custom_stream_tokens:
          type: array
          items:
            type: string
        custom_metric_names:
          type: array
          items:
            type: string
        custom_dimensions:
          type: array
          items:
            type: object
        opportunity_priorities:
          type: array
          items:
            type: integer

    GetTeamsResponse:
      type: array
      items:
        $ref: '#/components/schemas/TeamResponse'
